{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpenseFilter","value","selected","onChange","event","onFilterChange","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","INITIAL_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.210d990b.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = \"card \" + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date}/>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map(expense =>\r\n                <ExpenseItem\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                    key={expense.id}\r\n                />\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;","import './ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = props => {\r\n\r\n    const dropdownChangeHandler = event => {\r\n        props.onFilterChange(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseFilter;","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n\r\n    let barFillHeight = \"0%\";\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}> </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint =>\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label}\r\n                />)}\r\n        </div>)\r\n        ;\r\n};\r\n\r\nexport default Chart;","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0}\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;","import React, {useState} from 'react';\r\nimport ExpensesList from './ExpensesList';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nfunction Expenses(props) {\r\n\r\n    const [filteredYear, setFilteredYear] = useState(\"2020\")\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpenseFilter\r\n                selected={filteredYear}\r\n                onFilterChange={filterChangeHandler}\r\n            />\r\n            <ExpensesChart expenses={filteredExpenses}/>\r\n            <ExpensesList items={filteredExpenses}/>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Expenses;","import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = ({onSaveExpenseData, onCancel}) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredDate, setEnteredDate] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n\r\n    const titleChangeHandler = event => {\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n\r\n    const amountChangeHandler = event => {\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n\r\n    const dateChangeHandler = event => {\r\n        setEnteredDate(event.target.value);\r\n    };\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n        onSaveExpenseData(expenseData);\r\n        setEnteredTitle(\"\");\r\n        setEnteredAmount(\"\");\r\n        setEnteredDate(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0.01\"\r\n                        step=\"0.01\"\r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        min=\"2019-01-01\"\r\n                        max=\"2022-12-31\"\r\n                        value={enteredDate}\r\n                        onChange={dateChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button onClick={onCancel}>Cancel</button>\r\n                <button type=\"submit\">Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import React, {useState} from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = ({onAddExpense}) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = enteredExpenseData => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing && (\r\n                <button onClick={startEditingHandler}>Add New Expense</button>\r\n            )}\r\n            {isEditing && (\r\n                <ExpenseForm\r\n                    onSaveExpenseData={saveExpenseDataHandler}\r\n                    onCancel={stopEditingHandler}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import React, {useState} from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst INITIAL_EXPENSES = [\n    {\n        id: 'e1',\n        title: 'Shopping',\n        amount: 145.12,\n        date: new Date(2020, 7, 14),\n    },\n    {\n        id: 'e2',\n        title: 'English Courses',\n        amount: 59.29,\n        date: new Date(2021, 2, 12)\n    },\n    {\n        id: 'e3',\n        title: 'Taxi',\n        amount: 94.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: 'e4',\n        title: 'New Laptop',\n        amount: 350.00,\n        date: new Date(2021, 5, 12),\n    },\n    {\n        id: 'e5',\n        title: 'Birthday Party',\n        amount: 295.18,\n        date: new Date(2021, 1, 3),\n    },\n    {\n        id: 'e6',\n        title: 'Doctor consultation',\n        amount: 123.87,\n        date: new Date(2020, 4, 17),\n    },\n];\n\nfunction App() {\n\n    const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n\n    const addExpenseHandler = expense => {\n        setExpenses(prevExpenses => {\n            return [expense, ...prevExpenses];\n        });\n    };\n\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler}/>\n            <Expenses items={expenses}/>\n        </div>\n\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}